name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Detectar gerenciador de pacotes
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restaurar cache do Next.js
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Instalar dependências
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Definir variável de ambiente
        run: echo "NEXT_PUBLIC_API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV

      - name: Build com Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Upload dos arquivos para deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: .next/out

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: github-pages
    steps:
      - name: Baixar artefato do build
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: .next/out

      - name: Definir variável de ambiente no deploy
        run: echo "NEXT_PUBLIC_API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV

      - name: Deploy para GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Debug Variáveis
        run: echo "NEXT_PUBLIC_API_KEY=$NEXT_PUBLIC_API_KEY"

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NEXT_PUBLIC_API_KEY: ${{ secrets.API_KEY }}
